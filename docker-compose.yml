version: "2"
services:

  amqp:
    image: rabbitmq:3.6.5-management
    expose:
      - "5672" # RabbitMQ main port
      - "15672" # Management console (HTTP)
    ports:
      - "15672:15672"
    restart: always

  swift:
    image: vestaservices/swift-local:latest
    volumes:
      - /srv
    expose:
      - "8080"
    ports:
      - "8080:8080"

  mss:
    image: docker-registry.crim.ca/vesta/mss:1.7.0
    links:
      - amqp
      - swift
    ports:
      - "5170:5000"
    volumes:
      - ./mss/:/opt/mss_cfg/:ro
      - /data
    restart: always
    environment:
      VRP_CONFIGURATION: /opt/mss_cfg/conf.py

  transcoder:
    image: docker-registry.crim.ca/vesta/service-transcoding:0.2.8
    links:
      - amqp:amqp-server
      - mss
    user: "1000"
    restart: always

  sg:
    image: docker-registry.crim.ca/vesta/sg:1.7.3_old_build
    # image: vestaservices/servicegateway:1.7.6
    links:
      - amqp
    ports:
      - "5050:5000"
    volumes:
      - ./sg/:/opt/sg_cfg/:ro
      - /mnt/volume
    environment:
      VRP_CONFIGURATION: /opt/sg_cfg/conf.py
    logging:
      options:
        max-size: "100m"
    restart: always

  cb_server:
    build: ./callback_server/
    expose:
      - "5000"
    volumes:
      - ./callback_server/get_cb.py:/tmp/get_cb.py
    working_dir: /tmp
    command: /tmp/get_cb.py

  stub:
    image: vestaservices/servicestub:latest
    links:
      - amqp
      - mss
      - cb_server
    restart: always
    environment:
      C_FORCE_ROOT: "True"
    volumes:
      - ./celeryconfig.py:/conf/celeryconfig.py
    working_dir: /conf
    command: celery worker -A VestaService.stub -l INFO --config=celeryconfig -Q stub -n stub.%n

  flower:
    image: totem/celery-flower-docker
    links:
      - amqp
    user: "1000"
    restart: always
    ports:
      - "5555:5555"
    environment:
      AMQP_HOST: "amqp"
      AMQP_ADMIN_HOST: "amqp"
      FLOWER_BASIC_AUTH: "vesta:admin"

  jass:
    image: vestaservices/jass:latest
    environment:
      - MONGO_HOST=mongodb://annouser:whateve4rlogin@mongo/anno
    expose:
      - 5000
    ports:
      - "5002:5000"
    depends_on:
     - mongo

  mongo:
    image: tutum/mongodb
    expose:
      - 27017
      - 28017
    environment:
      - MONGODB_DATABASE=anno
      - MONGODB_USER=annouser
      - MONGODB_PASS=whateve4rlogin
    volumes:
      - /data
      
  webportal:
    image: docker-registry.crim.ca/vesta/webportal:1.1.1
    ports:
      - "8888:8888"
    # ENVIRONNEMENT FILE:
    # Add environment variables from a file. Can be a single value or a list.
    # Environment variables specified in environment override these values (environment variables with only a key are resolved to their values on the machine Compose is running on).
    # Values set in the shell environment will override those set in the .env file.
    #env_file: docker-compose-default.env
    # COMMAND:
    # command "node" has 5 parameters :
    # - main js file of the frontend application (absolute path)
    # - Public/external base URL of this frontend application (this value must be the same than the VESTAFRONTENDURL parameter in the portapi container)
    # - Public/external base URL of the backend application (portapi container)
    # - Demo mode (value is either "DEMO" or ""). Demo mode sets limitations on registrations and data in the platform.
    # - Google reCaptcha public key (this value must be the same than the VESTACAPTCHAPUBLICKEY parameter in the portapi container)
    # The Captcha must be configured with the public/external url of the frontend of the platform.
    # See https://www.google.com/recaptcha/admin
    # Note that Google reCaptcha is only used in Demo mode for researcher signup (and Demo mode is disabled by default)
    command: [ "node",
               "/usr/local/vesta/popcorn.webmaker.org/server.js",
               "${VESTAFRONTENDURL}",
               "${VESTABACKENDURL}",
               "",
               "${VESTACAPTCHAPUBLICKEY}" ]
               
  portalapi:
    image: docker-registry.crim.ca/vesta/portalapi:1.1.1
    ports:
       - "8889:8080"
    links:
      - mss
      - swift
    # ENVIRONNEMENT FILE:
    # Add environment variables from a file. Can be a single value or a list.
    # Environment variables specified in environment override these values (environment variables with only a key are resolved to their values on the machine Compose is running on).
    # Values set in the shell environment will override those set in the .env file.
    #env_file: docker-compose-default.env
    # ENVIRONNEMENT VARIABLES:
    # Environment variables with only a key are resolved to their values on the machine Compose is running on
    environment:
      # Whitelist to allow requests from selected ips (if empty, no restriction)
      VESTAALLOWEDIPSFROM: ""
      # Secret key (HMAC using SHA-512 hash algorithm) to sign the authentication tokens for the HTTP requests to the Vesta Services REST API.
      # The value must be the same as the value configured in the configuration files of mss and sg containers
      # The key is always required, but the Vesta Services authentication is disabled by default
      VESTAJWTSECRETKEY: "${VESTAJWTSECRETKEY}"
      # Public and private keys (RSASSA-PKCS-v1_5 using SHA-512 hash algorithm) to sign the authentication tokens to sign up in the platform
      VESTAJWTSIGNUPPUBLICKEY: "${VESTAJWTSIGNUPPUBLICKEY}"
      VESTAJWTSIGNUPPRIVATEKEY: "${VESTAJWTSIGNUPPRIVATEKEY}"
      # Expose method to get a temporary authentication token for the HTTP requests to the Vesta Services REST API
      VESTAALLOWTEMPSERVICESTOKEN: "false"
      # Allow admin users to delete datasets and studies (and all related data, including files in the MSS and annotations in the JASS) using the Support page in the platform or using a direct request to the REST API of the backend of the platform
      VESTAALLOWADMINDELETEDATASETS: "true"
      VESTAALLOWADMINDELETESTUDIES: "true"
      # Public and private keys for Google Captcha (the public key value must be the same than the command parameter in the webportal container)
      # The Captcha must be configured with the public/external url of the frontend of the platform.
      # See https://www.google.com/recaptcha/admin
      # Note that Google reCaptcha is only used in Demo mode for researcher signup (and Demo mode is disabled by default)
      VESTACAPTCHAPUBLICKEY: "${VESTACAPTCHAPUBLICKEY}"
      VESTACAPTCHAPRIVATEKEY: "${VESTACAPTCHAPRIVATEKEY}"
      # Support email
      VESTASUPPORTEMAIL: "${VESTASUPPORTEMAIL}"
      # Default admin account
      VESTAADMINEMAIL: "${VESTAADMINEMAIL}"
      VESTAADMINPASSWORD: "${VESTAADMINPASSWORD}"
      # Logs
      VESTA_LOG_LEVEL: "info"
      VESTA_LOGS_PATH: ""
      # Public/external base URL of the frontend of the platform (this value must be the same than the command parameter in the webportal container)
      VESTAFRONTENDURL: "${VESTAFRONTENDURL}"
      # Base URL for the Vesta Services
      VESTASERVICESVLBURL: "http://sg:5000"
      VESTAMSSSERVICEURL: "http://mss:5000"
      VESTAJASSURL: "http://jass:5000"
      # Filename for the configuration file of the Vesta services in the backend of the platform
      VESTASERVICESCONFFILENAME: "services_1.7.conf"
      # Default timeout for the HTTP requests from the backend
      VESTAHTTPREQUESTSTIMEOUT: "30 seconds"
      # Limitations :
      # Max number of datasets (videos) per user
      VESTAMAXDATASETSPERUSER: "10"
      # Max file size of dataset (video)
      VESTADATASETSMAXFILESIZEMB: "300"   
      # Warning period before the expiration date of the dataset
      VESTADATASETSWARNINGEXPIRPERIOD: "1 week"
      # Expiration period of the dataset (then the dataset is deleted)
      VESTADATASETSEXPIRPERIOD: "3 months"
      # Max file duration of dataset (video)
      VESTADATASETSMAXFILEDURPERIOD: "30 minutes"
      # Warning period before the expiration date of inactive accounts
      VESTAACCOUNTWARNINGEXPPERIOD: "1 week"
      # Expiration period of inactive accounts (then the account is deleted)
      VESTAACCOUNTEXPIRPERIOD: "3 months"
      # Expiration period of the dataset lock (a dataset is locked when a user edits it, locks are removed after an expiration period after the last modified date)
      VESTALOCKEXPIRPERIOD: "24 hours"
      # Expiration period of the sign up token for PI users (then the account is suspended)
      VESTAPROFSIGNUPEXPIRPERIOD: "1 week"
      # Expiration period of the sign up token for Researcher users (then the account is deleted)
      VESTARESEARCHERSIGNUPEXPIRPERIOD: "1 week"
      # Enable demo registrations (enable if the webportal command has enabled Demo mode, disable otherwise)
      VESTADEMOINSCRIPTIONS: "false"
      # Default PI account (email, first name, last name and password) for demo registrations
      # Note that this is only required in Demo mode for researcher signup (and Demo mode is disabled by default)
      VESTADEFAULTPIEMAIL: "${VESTADEFAULTPIEMAIL}"
      VESTADEFAULTPIFIRSTNAME: "${VESTADEFAULTPIFIRSTNAME}"
      VESTADEFAULTPILASTNAME: "${VESTADEFAULTPILASTNAME}"
      VESTADEFAULTPIPASSWORD: "${VESTADEFAULTPIPASSWORD}"
      # Default university name for demo registrations
      # Note that this is only required in Demo mode for researcher signup (and Demo mode is disabled by default)
      VESTADEFAULTUNIVNAME: "CLOUD"
      # Max number of studies per Researcher user
      VESTAMAXSTUDIESPERRESEARCHER: "10"
      # Enable Swagger
      VESTASWAGGER: "true"
      # Mongo DB connection (host and port)
      VESTAMONGOHOST: "webdb"
      VESTAMONGOPORT: "27017"
      # Mail server connection (host, port, username and password)
      VESTAEMAILHOST: "${VESTAEMAILHOST}"
      VESTAEMAILPORT: "${VESTAEMAILPORT}"
      VESTAEMAILUSER: "${VESTAEMAILUSER}"
      VESTAEMAILPASSWORD: "${VESTAEMAILPASSWORD}"
      # Tomcat settings
      CATALINA_OPTS: "-Dfile.encoding=utf8"
  
  webdb:
    image: mongo
    environment:
      AUTH: "no"
    expose:
      - 27017
      - 28017

# For performance issues.
networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450